Link to challenge : <https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/kernel/CISCN2017-babydriver>

## The vuln

1. There's a UAF vulnerability in this kernel module.

2. If the user opens the device /dev/babydev twice, the global babydev struct will be shared across these two.

3. The user can then close one fd which will free the babydev buffer and thus creating a dangling pointer.


## The exploit

The best way to attack this target is to overwrite the cred structure which contains fields like UID, GID etc.

The size of the cred structure is 0xa8

We need to reallocate the buffer to this size and then perform the UAF.

Once we have a dangling pointer, we need to perform a fork which will create a new cred structure at the same memory address.

Now, we can use the dangling pointer to overwrite the cred structure's uid to 0.

I overwrote all 8 uid/gid fields and the usage field (which is why the length of the buffer is 9 integers long)
